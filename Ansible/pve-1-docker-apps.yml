- name: Deploy Docker Applications for PVE-1
  hosts: all
  become: true
  strategy: free
  ignore_unreachable: yes

  pre_tasks:
    - name: Define docker apps by host (without cadvisor)
      set_fact:
        _docker_apps_by_host:
          Docker-1:
            - { name: traefik }
            # - { name: teamspeak }
            - { name: plexapps }
            - { name: heimdall }
            - { name: homepage-1, restart: true }
            - { name: gitea }
            - { name: pdf }
            - { name: healthchecks }
            - { name: monitoring, restart: true }
            - { name: portainer }
            - { name: upsnap }
            # - { name: homeassistant }
            - { name: dns-update, restart: true }
            - { name: open-webui }
            - { name: joke-de-jean, restart: true, pull_latest: true }
            - { name: code-server }
          DNS-1:
            - { name: adguardhome }
          Plex-1:
            - { name: plex }
          Satisfactory:
            - { name: satisfactory }

    - name: Initialize docker_apps_by_host
      set_fact:
        docker_apps_by_host: {}

    - name: Ensure cadvisor is present in docker apps for all hosts
      set_fact:
        docker_apps_by_host: >-
          {{
            docker_apps_by_host | combine({
              item.key:
                (
                  item.value
                  + ([{'name': 'cadvisor'}]
                     if 'cadvisor' not in (item.value | map(attribute='name') | list)
                     else []
                   )
                )
            })
          }}
      with_dict: "{{ _docker_apps_by_host }}"

  tasks:
    - name: Skip all tasks if host is unreachable
      meta: end_host
      when: ansible_unreachable is defined and ansible_unreachable

    - name: Check if host has docker apps
      set_fact:
        has_docker_apps: "{{ inventory_hostname in docker_apps_by_host and docker_apps_by_host[inventory_hostname]|length > 0 }}"
      when: not (ansible_unreachable is defined and ansible_unreachable)

    - name: Ensure Docker is installed (only if needed)
      include_tasks: ./Tasks/install_docker.yml
      when: has_docker_apps | default(false)

    - name: Deploy docker apps (only if host has apps)
      include_tasks: ./Tasks/docker.yml
      loop: "{{ docker_apps_by_host[inventory_hostname] | default([]) }}"
      loop_control:
        loop_var: item
      when: has_docker_apps | default(false)
      vars:
        application: "{{ item.name }}"
        restart: "{{ item.restart | default(omit) }}"
        pull_latest: "{{ item.pull_latest | default(omit) }}"

    - name: Wait for all docker compose jobs to finish
      ansible.builtin.async_status:
        jid: "{{ item }}"
      register: async_poll_all
      until: async_poll_all.finished
      retries: 60
      delay: 5
      loop: "{{ compose_job_ids | default([]) }}"
      when: has_docker_apps | default(false) and (compose_job_ids | default([])) | length > 0
