- name: Deploy Docker Applications for PVE-1
  hosts: all
  become: true
  strategy: free
  ignore_unreachable: yes

  vars:
    docker_apps_by_host:
      Docker-1:
        - { name: traefik }
        # - { name: teamspeak }
        - { name: plexapps }
        - { name: heimdall }
        - { name: homepage-1, restart: true }
        - { name: gitea }
        - { name: pdf }
        - { name: healthchecks }
        - { name: monitoring, restart: true }
        - { name: portainer }
        - { name: upsnap }
        # - { name: homeassistant }
        - { name: dns-update, restart: true }
        - { name: open-webui }
        - { name: joke-de-jean, restart: true, pull_latest: true }
        - { name: code-server }
      DNS-1:
        - { name: adguardhome }
      Plex-1:
        - { name: plex }
      Satisfactory:
        - { name: satisfactory }

  tasks:
    - name: Skip all tasks if host is unreachable
      meta: end_host
      when: ansible_unreachable is defined and ansible_unreachable

    - name: Check if host has docker apps
      ansible.builtin.set_fact:
        has_docker_apps: "{{ inventory_hostname in docker_apps_by_host and docker_apps_by_host[inventory_hostname]|length > 0 }}"
      when: not (ansible_unreachable is defined and ansible_unreachable)

    - name: Ensure Docker is installed (only if needed)
      ansible.builtin.include_tasks: ./Tasks/install_docker.yml
      when: has_docker_apps | default(false)

    - name: Deploy docker apps (only if host has apps)
      ansible.builtin.include_tasks: ./Tasks/docker.yml
      loop: "{{ docker_apps_by_host[inventory_hostname] | default([]) }}"
      loop_control:
        loop_var: item
      when: has_docker_apps | default(false)
      vars:
        application: "{{ item.name }}"
        restart: "{{ item.restart | default(omit) }}"
        pull_latest: "{{ item.pull_latest | default(omit) }}"