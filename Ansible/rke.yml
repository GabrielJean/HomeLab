- name: Setup RKE2 cluster with Tailscale
  hosts: rke_cluster
  become: true
  vars_files:
    - vars/ts.yml
  tasks:
    - name: Install necessary dependencies
      ansible.builtin.apt:
        name:
          - curl
          - gnupg
        state: present
        update_cache: true

    - name: Install kubectl using Snap
      when: "inventory_hostname in groups['master']"
      ansible.builtin.command: snap install kubectl --classic


    - name: Install Tailscale
      ansible.builtin.command: |
        curl -fsSL https://tailscale.com/install.sh | sh
      args:
        executable: /bin/bash

    - name: Authenticate Tailscale
      ansible.builtin.command: |
        tailscale up --authkey {{ tailscale_auth_key }}
      args:
        executable: /bin/bash

    - name: Add RKE2 repository
      ansible.builtin.command: |
        curl -sfL https://get.rke2.io | sh -
      args:
        executable: /bin/bash

    - name: Configure RKE2 server with Tailscale advertise address
      when: "inventory_hostname in groups['master']"
      block:
        - name: Get Tailscale IP on master
          ansible.builtin.command: "tailscale ip -4"
          register: master_tailscale_ip

        - name: Ensure /etc/rancher/rke2 directory exists
          ansible.builtin.file:
            path: /etc/rancher/rke2
            state: directory

        - name: Write RKE2 server configuration
          ansible.builtin.copy:
            content: |
              advertise-address: {{ master_tailscale_ip.stdout }}
            dest: /etc/rancher/rke2/config.yaml

    - name: Enable and start RKE2 server on master node
      when: "inventory_hostname in groups['master']"
      ansible.builtin.systemd:
        name: rke2-server
        enabled: true
        state: started

    - name: Patch the rke2-canal-config configmap to set canal_iface to tailscale0
      when: "inventory_hostname in groups['master']"
      ansible.builtin.command:
        cmd: "kubectl patch configmaps rke2-canal-config -n kube-system --kubeconfig /etc/rancher/rke2/rke2.yaml -p '{\"data\":{\"canal_iface\": \"tailscale0\"}}'"
      become: true
      become_user: root
      register: result
      until: result.rc == 0  # Check if return code (rc) is 0 (success)
      retries: 50             # Number of retries
      delay: 10              # Delay between retries in seconds
      failed_when: result.rc != 0  # Fail the task if it's still not successful after retries

    - name: Replace 127.0.0.1 in kubeconfig with master_tailscale_ip
      when: "inventory_hostname in groups['master']"
      become: true
      become_user: root
      ansible.builtin.replace:
        path: "/etc/rancher/rke2/rke2.yaml"  # Replace with the actual path to your kubeconfig file
        regexp: "127.0.0.1"
        replace: "{{ master_tailscale_ip.stdout }}"

    - name: Fetch RKE2 config file
      when: "inventory_hostname in groups['master']"
      become: true
      become_user: root
      ansible.builtin.fetch:
        src: /etc/rancher/rke2/rke2.yaml
        dest: ~/.kube/config  # This will copy to the local ansible host's .kube/config
        flat: true  # Ensures that the file is copied directly to the destination without directories


    - name: Download RKE2 agent installation script
      when: "inventory_hostname in groups['worker']"
      ansible.builtin.get_url:
        url: https://get.rke2.io
        dest: /tmp/get_rke2.sh
        mode: '0755'

    - name: Install RKE2 agent on worker nodes
      when: "inventory_hostname in groups['worker']"
      ansible.builtin.command: sh /tmp/get_rke2.sh
      args:
        executable: /bin/bash
      environment:
        INSTALL_RKE2_TYPE: "agent"

    - name: Configure RKE2 agent with Tailscale and LAN IPs
      when: "inventory_hostname in groups['worker']"
      block:
        - name: Get Tailscale IP on worker
          ansible.builtin.command: "tailscale ip -4"
          register: worker_tailscale_ip

        - name: Get LAN IP on worker
          ansible.builtin.command: "hostname -I | awk '{print $1}'"
          register: worker_lan_ip

        - name: Ensure /etc/rancher/rke2 directory exists
          ansible.builtin.file:
            path: /etc/rancher/rke2
            state: directory

        - name: Write RKE2 agent configuration
          ansible.builtin.copy:
            content: |
              node-ip: {{ worker_tailscale_ip.stdout }}
              node-external-ip: {{ worker_lan_ip.stdout }}
            dest: /etc/rancher/rke2/config.yaml

    - name: Retrieve RKE2 join token and Tailscale IP on master node
      when: "inventory_hostname in groups['master']"
      block:
        - name: Get RKE2 join token
          ansible.builtin.command: "cat /var/lib/rancher/rke2/server/node-token"
          register: join_token

        - name: Get Tailscale IP on master
          ansible.builtin.command: "tailscale ip -4"
          register: master_tailscale_ip
      run_once: true

    - name: Join worker nodes to the cluster using Tailscale IP of master
      when: "inventory_hostname in groups['worker']"
      ansible.builtin.command: |
        echo "server: https://{{ master_tailscale_ip.stdout }}:9345" >> /etc/rancher/rke2/config.yaml
        echo "token: {{ join_token.stdout }}" >> /etc/rancher/rke2/config.yaml
      args:
        executable: /bin/bash

    - name: Enable and start RKE2 agent on worker node
      when: "inventory_hostname in groups['worker']"
      ansible.builtin.systemd:
        name: rke2-agent
        enabled: true
        state: started
