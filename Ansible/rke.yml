---
- name: Ensure dependencies and Tailscale on all RKE2 hosts
  hosts: rke_cluster
  become: true
  gather_facts: true
  vars_files:
    - vars/ts.yml
  vars:
    ubuntu_codename: "{{ ansible_distribution_release }}"
  tasks:
    - name: Ensure apt dependencies
      ansible.builtin.apt:
        name:
          - curl
          - gnupg
        state: present
        update_cache: yes

    - name: Setup Tailscale apt signing key and repo
      ansible.builtin.apt_key:
        url: "https://pkgs.tailscale.com/stable/ubuntu/{{ ubuntu_codename }}.noarmor.gpg"
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Add Tailscale apt repository
      ansible.builtin.apt_repository:
        repo: "deb https://pkgs.tailscale.com/stable/ubuntu {{ ubuntu_codename }} main"
        state: present
        update_cache: yes
      when: ansible_distribution == "Ubuntu"

    - name: Install Tailscale
      ansible.builtin.apt:
        name: tailscale
        state: present

    - name: Ensure Tailscale daemon is running
      ansible.builtin.systemd:
        name: tailscaled
        enabled: yes
        state: started

    - name: Authenticate Tailscale if needed
      shell: |
        tailscale status || tailscale up --authkey {{ tailscale_auth_key }}
      args:
        executable: /bin/bash

    - name: Get Tailscale IPv4 address
      command: tailscale ip -4
      register: ts_ip
      changed_when: false

    - name: Set Tailscale IP as a fact
      set_fact:
        tailscale_ipv4: "{{ ts_ip.stdout }}"

    - name: Ensure RKE2 config directory exists
      file:
        path: /etc/rancher/rke2
        state: directory

# MASTER NODES
- name: Install and configure RKE2 server (master)
  hosts: k8s-master
  become: true
  gather_facts: false
  vars_files:
    - vars/ts.yml
  tasks:
    - name: Download and install RKE2 if not present
      stat:
        path: /usr/local/bin/rke2
      register: rke2_binary

    - name: Install RKE2 server
      shell: curl -sfL https://get.rke2.io | sh -
      when: not rke2_binary.stat.exists
      args:
        executable: /bin/bash

    - name: Ensure kubectl via snap
      ansible.builtin.command: snap install kubectl --classic
      args:
        creates: /snap/bin/kubectl

    - name: Write RKE2 server config
      copy:
        content: |
          advertise-address: {{ tailscale_ipv4 }}
        dest: /etc/rancher/rke2/config.yaml
        owner: root
        group: root
        mode: 0644

    - name: Enable and start RKE2 server
      systemd:
        name: rke2-server
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Wait for kubeconfig to exist
      wait_for:
        path: /etc/rancher/rke2/rke2.yaml
        timeout: 120

    - name: Patch rke2-canal-config configmap to use tailscale0
      shell: |
        kubectl patch configmaps rke2-canal-config -n kube-system \
          --kubeconfig /etc/rancher/rke2/rke2.yaml \
          -p '{"data":{"canal_iface": "tailscale0"}}'
      register: patch_result
      retries: 12
      delay: 10
      until: patch_result.rc == 0

    - name: Replace 127.0.0.1 in kubeconfig with master Tailscale IP
      replace:
        path: /etc/rancher/rke2/rke2.yaml
        regexp: "127.0.0.1"
        replace: "{{ tailscale_ipv4 }}"

    - name: Fetch RKE2 kubeconfig to control machine
      fetch:
        src: /etc/rancher/rke2/rke2.yaml
        dest: "kubeconfigs/rke2-{{ inventory_hostname }}.yaml"
        flat: yes

    - name: Grab join token
      command: cat /var/lib/rancher/rke2/server/node-token
      register: join_token
      changed_when: false

    - name: Set join token fact for worker hosts
      set_fact:
        rke2_join_token: "{{ join_token.stdout }}"
        rke2_master_ip: "{{ tailscale_ipv4 }}"

    - name: Add master info to Ansible in-memory host
      add_host:
        name: rke2_facts
        rke2_token: "{{ rke2_join_token }}"
        rke2_master_ip: "{{ rke2_master_ip }}"
      delegate_to: localhost

# WORKERS
- name: Install and configure RKE2 agent (worker)
  hosts: k8s-worker
  become: true
  gather_facts: false
  vars_files:
    - vars/ts.yml
  tasks:
    - name: Wait for Master facts
      pause:
        seconds: 10

    - name: Gather join token and master Ip from master
      set_fact:
        rke2_token: "{{ hostvars[groups['k8s-master'][0]].rke2_join_token }}"
        rke2_master_ip: "{{ hostvars[groups['k8s-master'][0]].rke2_master_ip }}"

    - name: Download and install RKE2 agent if not present
      stat:
        path: /usr/local/bin/rke2
      register: rke2_agent_binary

    - name: Install RKE2 agent
      shell: curl -sfL https://get.rke2.io | INSTALL_RKE2_TYPE=agent sh -
      when: not rke2_agent_binary.stat.exists
      args:
        executable: /bin/bash

    - name: Get worker's LAN IP
      shell: hostname -I | awk '{print $1}'
      register: worker_lan_ip
      changed_when: false

    - name: Write RKE2 agent config
      copy:
        content: |
          server: https://{{ rke2_master_ip }}:9345
          token: {{ rke2_token }}
          node-ip: {{ tailscale_ipv4 }}
          node-external-ip: {{ worker_lan_ip.stdout }}
        dest: /etc/rancher/rke2/config.yaml
        owner: root
        group: root
        mode: '0644'

    - name: Enable and start RKE2 agent
      systemd:
        name: rke2-agent
        enabled: yes
        state: started
        daemon_reload: yes