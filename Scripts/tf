#!/usr/bin/env bash
set -euo pipefail

# Helper script to wrap terraform with safe secrets handling.
# Usage: ./tf plan|apply [extra terraform args]

ROOT_DIR=$(cd "$(dirname "$0")"/.. && pwd)
TF_DIR="$ROOT_DIR/Terraform"
cd "$TF_DIR"

# Prefer encrypted var file if present
VAULT_FILE="secrets.tfvars.vault"

if [[ -f "$VAULT_FILE" ]]; then
  if command -v ansible-vault >/dev/null 2>&1; then
    exec terraform "$@" -var-file=<(ansible-vault view "$VAULT_FILE")
  elif command -v sops >/dev/null 2>&1; then
    # If a SOPS JSON exists, prefer it
    if [[ -f "secrets.tfvars.json" ]]; then
      exec terraform "$@" -var-file=<(sops -d secrets.tfvars.json)
    else
      echo "Ansible Vault or SOPS required to decrypt $VAULT_FILE" >&2
      exit 1
    fi
  else
    echo "Please install ansible-vault (ansible) or sops to decrypt $VAULT_FILE" >&2
    exit 1
  fi
else
  # Fall back to env variables TF_VAR_*
  exec terraform "$@"
fi

