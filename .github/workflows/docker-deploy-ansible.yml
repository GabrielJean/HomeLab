name: Deploy Docker

on:
  push:
    branches:
      - main
    paths:
      - 'Docker/**'
      - '**/*docker*'
  workflow_dispatch:

jobs:
  run-pve-1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Create ansible_vault_password_file
        run: echo "${{ secrets.ANSIBLE_VAULT_DOCKER }}" > .vault_pass.txt
        working-directory: Ansible

      - name: Decrypt inventory.ini
        run: ansible-vault decrypt --vault-password-file .vault_pass.txt inventory.ini
        working-directory: Ansible

      - name: Retrieve SSH private key
        run: echo "${{ secrets.CI_PRIVATE_KEY }}" > private_key
        working-directory: Ansible

      - name: Set permissions for private key
        run: chmod 600 private_key
        working-directory: Ansible

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Run Ansible Playbook PVE-1
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'false'
        run: ansible-playbook pve-1-docker-apps.yml --private-key private_key -i inventory.ini --extra-vars "ansible_user=ci" --vault-password-file .vault_pass.txt
        working-directory: Ansible

  run-pve-2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Create ansible_vault_password_file
        run: echo "${{ secrets.ANSIBLE_VAULT_DOCKER }}" > .vault_pass.txt
        working-directory: Ansible

      - name: Decrypt inventory.ini
        run: ansible-vault decrypt --vault-password-file .vault_pass.txt inventory.ini
        working-directory: Ansible

      - name: Retrieve SSH private key
        run: echo "${{ secrets.CI_PRIVATE_KEY }}" > private_key
        working-directory: Ansible

      - name: Set permissions for private key
        run: chmod 600 private_key
        working-directory: Ansible

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Run Ansible Playbook PVE-2
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'false'
        run: ansible-playbook pve-2-docker-apps.yml --private-key private_key -i inventory.ini --extra-vars "ansible_user=ci" --vault-password-file .vault_pass.txt
        working-directory: Ansible