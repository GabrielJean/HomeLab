apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: traefik
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: traefik.io/ingress-controller
---
# Dashboard ingress using Traefik CRD
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard
  namespace: traefik-system
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`traefik.local`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService
  tls:
    certResolver: letsencrypt
---
# Middleware for basic auth (optional)
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: basic-auth
  namespace: traefik-system
spec:
  basicAuth:
    secret: basic-auth-secret
---
# Secret for basic auth (you'll need to create this with htpasswd)
# Example: htpasswd -c auth admin
# kubectl create secret generic basic-auth-secret --from-file=users=auth -n traefik-system
apiVersion: v1
kind: Secret
metadata:
  name: basic-auth-secret
  namespace: traefik-system
type: Opaque
data:
  # This is admin:admin (change this!)
  # Generate with: echo -n 'admin:$2y$10$...' | base64
  users: YWRtaW46JGFwcjEkSDY1dnNxck4kNlN0T1YuMGFCRUNKYnNVZzVBdVZOMQ==
